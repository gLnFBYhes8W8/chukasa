aaa:
  enabled: true
  initial-username:
  initial-password:

system:
  ffmpeg-path: /usr/local/bin/ffmpeg
  webcam-device-name: /dev/video0
  webcam-audio-name: hw:0,0
  webcam-audio-channel: 2
  temporary-path: /tmp/chukasa
  file-path: /opt/chukasa/video
  ffmpeg-threads: 1

common:
  video-file-extension: ts,m2t,mp4,mov,mpg,mpeg,vob,avi,divx,wmv,flv,ogg,ogm,iso

epg:
  tuner: tuner.json
  channel-configuration: channel_configuration.json
  acquisition-schedule-cron: 0 0 7 * * *
  acquisition-on-boot-ignored-interval: 86400000 # ms (1 day)
  old-program-deletion-schedule-cron: 0 0 6 * * *

hls:
  duration: 2
  uri-in-playlist: 3

recorder:
  start-margin: 30
  stop-margin: 0

hyaruka:
  username:
  password:
  scheme: http
  host: localhost
  port: 49149
  enabled: true
  unix-domain-socket-enabled: false

server:
  port: 8080

api:
  root: /api

logging:
  path: logs
  level:
    root: INFO
    org:
      springframework:
        web: INFO
      hibernate: ERROR

spring:
  profiles:
    active: chukasa-mongodb
  jpa:
    hibernate:
      ddl-auto: create-drop
  thymeleaf:
    cache: false
      # m3u8, ts の Content-Type に ; charset=UTF-8 が付くのを防ぐ
  http:
    encoding:
      force: false
---
spring:
  profiles: localhost-no-database
server:
  port: 8080
---
spring:
  profiles: chukasa-mongodb
  # MongoDB
  # if want to use this application on Docker, change -> ex. "spring.data.mongodb.host=mongo"
  # spring.data.mongodb.host=mongo
  data:
    mongodb:
      host: localhost
      port: 27017
      database: chukasa
      server-selection-timeout: 500
---
spring:
  profiles: chukasa-docker
  data:
    mongodb:
      host: chukasa-mongo
      port: 27017
      database: chukasa
      server-selection-timeout: 500
hyaruka:
  username:
  password:
  scheme: http
  host: hyaruka
  port: 49149
  enabled: true
  unix-domain-socket-enabled: false