# Ubuntu 18.04.1, ubuntu-18.04.1-desktop-amd64.iso
# GeForce GTX 1050 NVENC

# uname -a
# Linux dev 4.15.0-29-generic #31-Ubuntu SMP Tue Jul 17 15:39:52 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux

/*******************************************************
# cat /etc/lsb-release
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=18.04
DISTRIB_CODENAME=bionic
DISTRIB_DESCRIPTION="Ubuntu 18.04.1 LTS"
/*******************************************************

/*******************************************************
# df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            7.8G     0  7.8G   0% /dev
tmpfs           1.6G  1.9M  1.6G   1% /run
/dev/sda1       110G  6.2G   98G   6% /
tmpfs           7.8G  101M  7.7G   2% /dev/shm
tmpfs           5.0M  4.0K  5.0M   1% /run/lock
tmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup
tmpfs           1.6G   16K  1.6G   1% /run/user/121
/dev/loop0       87M   87M     0 100% /snap/core/4917
/dev/loop1       35M   35M     0 100% /snap/gtk-common-themes/319
/dev/loop2      141M  141M     0 100% /snap/gnome-3-26-1604/70
/dev/loop3      2.4M  2.4M     0 100% /snap/gnome-calculator/180
/dev/loop4       13M   13M     0 100% /snap/gnome-characters/103
/dev/loop5       15M   15M     0 100% /snap/gnome-logs/37
/dev/loop6      3.8M  3.8M     0 100% /snap/gnome-system-monitor/51
tmpfs           1.6G   60K  1.6G   1% /run/user/1000
/*******************************************************

/****************************************************************
 BEGIN
****************************************************************/

/****************************************************************
 Networking
****************************************************************/
#

/****************************************************************
 Time
****************************************************************/
#sudo timedatectl status
#sudo timedatectl set-ntp true

/****************************************************************
 Apt
****************************************************************/
sudo apt-get update
#sudo apt-get -y upgrade
#sudo apt-get -y dist-upgrade
#sudo reboot

/****************************************************************
 Package
****************************************************************/
sudo apt-get -y install build-essential git wget libasound2-dev \
  autoconf libtool pcsc-tools pkg-config libpcsclite-dev pcscd \
  cmake yasm curl ssh

/****************************************************************
 NVIDIA Driver
****************************************************************/
###sudo ubuntu-drivers autoinstall
# CUDA Toolkit 10.0 https://developer.nvidia.com/cuda-toolkit
sudo dpkg -i cuda-repo-ubuntu1804-10-0-local-10.0.130-410.48_1.0-1_amd64.deb
sudo apt-key add /var/cuda-repo-10-0-local-10.0.130-410.48/7fa2af80.pub
sudo apt-get update
sudo apt-get install cuda
echo '' >> ~/.profile
echo 'export PATH=/usr/local/cuda/bin:$PATH' >> ~/.profile
echo 'export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH' >> ~/.profile
source ~/.profile
sudo reboot

nvidia-smi
Fri Dec 21 21:36:35 2018
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 410.48                 Driver Version: 410.48                    |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  GeForce GTX 1050    Off  | 00000000:01:00.0  On |                  N/A |
| 45%   45C    P0    N/A /  75W |    512MiB /  1999MiB |      4%      Default |
+-------------------------------+----------------------+----------------------+

+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID   Type   Process name                             Usage      |
|=============================================================================|
|    0       908      G   /usr/lib/xorg/Xorg                            40MiB |
|    0       959      G   /usr/bin/gnome-shell                          49MiB |
|    0      1219      G   /usr/lib/xorg/Xorg                           211MiB |
|    0      1362      G   /usr/bin/gnome-shell                         132MiB |
|    0     10075      G   ...quest-channel-token=4410927296771017467    76MiB |
+-----------------------------------------------------------------------------+

/****************************************************************
 Temprary Directory
****************************************************************/
mkdir ~/chukasa_temporary

/****************************************************************
 Video / Audio
****************************************************************/
sudo gpasswd -a $USER video
sudo gpasswd -a $USER audio

/****************************************************************
 Webcam (Audio)
****************************************************************/
# 環境により異なる．
# cat /proc/asound/modules にて事前に確認する．
sudo touch /etc/modprobe.d/alsa-base.conf

# ASUS Z170I PRO GAMING の場合
# cat /proc/asound/modules
#  0 snd_hda_intel
#  1 snd_usb_audio
# sudo sh -c "echo 'options snd slots=snd_usb_audio,snd_hda_intel' >> /etc/modprobe.d/alsa-base.conf"
# sudo sh -c "echo 'options snd_usb_audio index=0' >> /etc/modprobe.d/alsa-base.conf"
# sudo sh -c "echo 'options snd_hda_intel index=1' >> /etc/modprobe.d/alsa-base.conf"

# ASUS B85M-E の場合
sudo sh -c "echo 'options snd slots=snd_usb_audio,snd_hda_intel,snd_hda_intel' >> /etc/modprobe.d/alsa-base.conf"
sudo sh -c "echo 'options snd_usb_audio index=0' >> /etc/modprobe.d/alsa-base.conf"
sudo sh -c "echo 'options snd_hda_intel index=1' >> /etc/modprobe.d/alsa-base.conf"
sudo sh -c "echo 'options snd_hda_intel index=2' >> /etc/modprobe.d/alsa-base.conf"

/****************************************************************
 FFmpeg
****************************************************************/
cd ~/chukasa_temporary && \
    git clone https://git.videolan.org/git/ffmpeg/nv-codec-headers && \
    cd nv-codec-headers && \
    make && \
    sudo make install

cd ~/chukasa_temporary && \
    wget http://ffmpeg.org/releases/ffmpeg-4.1.tar.bz2 && \
    tar jxvf ffmpeg-4.1.tar.bz2 && \
    cd ffmpeg-4.1 && \
    ./configure --disable-shared --enable-static && \
    make -j$(nproc) && \
    sudo make install

/****************************************************************
 nginx
****************************************************************/
cd ~/chukasa_temporary && \
    sudo apt-get -y install libpcre3-dev libpcre++-dev libssl-dev zlibc zlib1g zlib1g-dev && \
    wget http://nginx.org/download/nginx-1.15.7.tar.gz && \
    tar zxvf nginx-1.15.7.tar.gz && \
    cd nginx-1.15.7 && \
    ./configure --with-http_ssl_module --with-ipv6 --with-http_v2_module && \
    make -j$(nproc) && \
    sudo make install

/****************************************************************
 MongoDB
****************************************************************/
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list
sudo apt-get update
sudo apt-get install -y mongodb-org
sudo systemctl enable mongod
sudo systemctl start mongod

/****************************************************************
 Java
****************************************************************/
cd ~/chukasa_temporary
curl -O https://download.java.net/java/GA/jdk11/13/GPL/openjdk-11.0.1_linux-x64_bin.tar.gz
sudo mkdir /usr/lib/jvm
sudo tar zxvf openjdk-11.0.1_linux-x64_bin.tar.gz -C /usr/lib/jvm/
sudo sh -c "echo 'export JAVA_HOME=/usr/lib/jvm/jdk-11.0.1' >> /etc/profile.d/jdk.sh"
sudo sh -c "echo 'export PATH=\$JAVA_HOME/bin:\$PATH' >> /etc/profile.d/jdk.sh"
source /etc/profile.d/jdk.sh

/****************************************************************
 Reboot
****************************************************************/
sudo reboot

/****************************************************************
 chukasa
****************************************************************/
# Deployment path
sudo mkdir -p /opt/chukasa/video
sudo chown $USER:$USER -R /opt/chukasa

# Build
cd /opt/chukasa
git clone https://github.com/hirooka/chukasa
cd chukasa
./gradlew build
cp build/libs/chukasa-0.0.1-SNAPSHOT.jar /opt/chukasa/

#　nginx service
sudo cp ubuntu/nginx/nginx.conf /usr/local/nginx/conf/nginx.conf
sudo cp ubuntu/systemd/nginx.service /etc/systemd/system/
sudo systemctl enable nginx
sudo systemctl start nginx

# chukasa service
sudo cp ubuntu/systemd/chukasa.service /etc/systemd/system/
sudo sh -c "sed -i -e 's/User=chukasa/User=$USER/g' /etc/systemd/system/chukasa.service"
sudo systemctl enable chukasa
sudo systemctl start chukasa

/****************************************************************
 Test
****************************************************************/
# Start

curl \
-u guest:guest \
--header "Content-type: application/json" \
-H "User-Agent: chukasa-ios" \
--request POST \
--data \
'{
  "adaptiveBitrateStreaming":0,
  "streamingType":"TUNER",
  "playlistType":"LIVE",
  "transcodingSettings":"CELLULAR_LOW",
  "canEncrypt":true,
  "channelRecording":XX,
  "tunerType":null,
  "fileName":null,
  "videoResolution":null,
  "videoBitrate":0,
  "audioBitrate":0
}' \
http://localhost:8080/api/v1/chukasa/start

# Stop

curl \
-u guest:guest \
--header "Content-type: application/json" \
-H "User-Agent: chukasa-ios" \
--request GET \
http://localhost:8080/api/v1/chukasa/stop

/****************************************************************
 End Of Procedure
****************************************************************/

/****************************************************************
 Tools
****************************************************************/
# Input Japanase
# https://hirooka.pro/?p=9679

# mount HDD
# https://hirooka.pro/?p=8450

# Google Chrome
sudo dpkg -i google-chrome-stable_current_amd64.deb

# VLC
sudo apt-get -y install vlc

# VirtualBox
#sudo apt-get -y install libqt5printsupport5 libqt5opengl5
#wget https://download.virtualbox.org/virtualbox/5.2.10/virtualbox-5.2_5.2.10-122088~Ubuntu~bionic_amd64.deb
#sudo dpkg -i virtualbox-5.2_5.2.10-122088~Ubuntu~bionic_amd64.deb

# SDKMAN!, IntelliJ IDEA